plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.luazevedo'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
//	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
	implementation 'org.postgresql:postgresql'
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
	implementation 'org.projectlombok:lombok:1.18.24'
	annotationProcessor 'org.projectlombok:lombok:1.18.24'
	implementation 'org.hibernate.validator:hibernate-validator:8.0.0.Final'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

//	implementation 'io.jsonwebtoken:jjwt:0.9.1'



//implementation 'org.springdoc:springdoc-openapi-ui:2.0.2'
}

test {
	useJUnitPlatform()

	// Configurações de logging do teste
	test {
		testLogging {
			events "passed", "skipped", "failed"
			exceptionFormat "full"
			showStandardStreams = true
		}

		// Tarefa para personalizar o relatório HTML
		finalizedBy('customizeTestReport')
	}

	task customizeTestReport {
		doLast {
			def reportFile = file("${buildDir}/reports/tests/test/index.html")
			if (reportFile.exists()) {
				def projectName = "EmprestimoBancario"
				def authorName = "Luciene Azevedo"
				def content = reportFile.text

				// Adiciona o nome do projeto e a autoria ao cabeçalho do relatório HTML
				def customHeader = "<h1>Relatório de Testes - Projeto: ${projectName}</h1><h3>Autoria: ${authorName}</h3>"
				content = content.replaceFirst("<body>", "<body>" + customHeader)
				reportFile.text = content
			}
		}
	}
}
